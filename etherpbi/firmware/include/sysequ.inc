;;
;; Copyright (C) 2013, David M. Lloyd
;;
;; This file is part of the PBIBox suite.
;;
;; PBIBox is free software: you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation, either version 3 of the License, or
;; (at your option) any later version.
;;
;; PBIBox is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.
;;
;; You should have received a copy of the GNU General Public License
;; along with PBIBox.  If not, see <http://www.gnu.org/licenses/>.
;;

; The following system equates are based on an original file with unknown lineage, however
; they are most likely (C) 1983 (or perhaps earlier) Atari, given out to users for
; their use with various utility disks and programs.  Some modifications (C) 2013 by David M. Lloyd.

.scope SYS

    ;
    ;       STATUS  CODES
    ;
    EOK     = $01       ;1
    EBRKABT = $80       ;128 BREAK KEY ABORT
    EPRVOPN = $82       ;130 IOCB ALREADY OPEN
    ENONDEV = $82       ;130 NONEXISTANT DEVICE
    EWRONLY = $83       ;131 OPENED FOR WRITE ONLY
    ENVALID = $84       ;132 INVALID COMMAND
    ENOTOPN = $85       ;133 DEVICE OR FILE NOT OPEN
    EBADIOC = $86       ;134 INVALID IOCB NUMBER
    ERDONLY = $87       ;135 OPENED FOR READ ONLY
    EEOFERR = $88       ;136 END OF FILE
    ETRNRCD = $89       ;137 TRUNCATED RECORD
    ETIMOUT = $8A       ;138 PERIPHERAL TIME OUT
    EDNACK  = $8B       ;139 DEVICE DOES NOT ACKNOWLEDGE
    EFRMERR = $8C       ;140 SERIAL BUS FRAMING ERROR
    ECRSROR = $8D       ;141 CURSOR OUT OF RANGE
    EOVRRUN = $8E       ;142 SERIAL BUS DATA OVERRUN
    ECHKERR = $8F       ;143 SERIAL BUS CHECKSUM ERROR
    EDERROR = $90       ;144 PERIPHERAL DEVICE ERROR
    EBADMOD = $91       ;145 NON EXISTANT SCREEN MODE
    EFNCNOT = $92       ;146 FUNCTION NOT IMPLEMENTED
    ESCRMEM = $93       ;147 NOT ENOUGH MEMORY FOR SCREEN MODE

    EISOPEN = $96       ;150 PORT ALREADY OPEN
    ENOCONC = $97       ;151 CONCURRENT MODE I/O NOT ENABLED
    EBADBUF = $98       ;152 ILLEGAL BUFFER
    EACCONC = $99       ;153 ACTIVE CONCURRENT MODE I/O ERROR
    ENOCNCA = $9A       ;154 CONCURRENT MODE I/O NOT ACTIVE

    EDRIVNO = $A0       ;160 DRIVE NUMBER ERROR
    ENFILE  = $A1       ;161 TOO MANY OPEN FILES
    EFULL   = $A2       ;162 DISK FULL
    EIO     = $A3       ;163 UNRECOVERABLE SYSTEM DATA I/O ERROR
    EFILNOM = $A4       ;164 FILE NUMBER MISMATCH
    EBADNAM = $A5       ;165 FILE NAME ERROR
    EPNTLEN = $A6       ;166 POINT DATA LENGTH ERROR
    ELOCKED = $A7       ;167 FILE LOCKED
    EBADXIO = $A8       ;168 INVALID XIO COMMAND
    EDIRFUL = $A9       ;169 DIRECTORY FULL
    ENOTFND = $AA       ;170 FILE NOT FOUND
    EPNTINV = $AB       ;171 INVALID POINT
    EBADAPP = $AC       ;172 ILLEGAL APPEND
    EBADSEC = $AD       ;173 BAD SECTORS AT FORMAT

    ; Network-specific:

    ERESET              = $B0   ; Connection reset by peer
    EADDRINUSE          = $B1   ; Binding to an already-bound address
    ESTATE              = $B2   ; Bad socket state (e.g. already connecting)
    ECONNREFUSED        = $B3   ; Connection refused by peer
    ENOTCONN            = $B4   ; Not connected
    EAGAIN              = $FF   ; Retry non-blocking operation

    ;
    ;       OS VARIABLES
    ;
    ;          PAGE 0
    ;        $00        ;0 (XL) RESERVED
    NGFLAG = $01        ;1 (XL) FOR POWER-UP SELF TEST
    CASINI = $02        ;2
    RAMLO  = $04        ;4 POINTER FOR SELF TEST
    TRAMSZ = $06        ;6 TEMPORARY RAM SIZE
    TSTDAT = $07        ;7 TEST DATA
    WARMST = $08        ;8
    BOOTQ  = $09        ;9 SUCCESSFUL BOOT FLAG
    DOSVEC = $0A       ;10 PROGRAM RUN VECTOR
    DOSINI = $0C       ;12 PROGRAM INITIALIZATION
    APPMHI = $0E       ;14 DISPLAY LOW LIMIT
    POKMSK = $10       ;16 IRQ ENABLE FLAGS
    BRKKEY = $11       ;17 FLAG
    RTCLOK = $12       ;18 3 BYTES, MSB FIRST
    BUFADR = $15       ;21 INDIRECT BUFFER ADDRESS
    ICCOMT = $17       ;23 COMMAND FOR VECTOR
    DSKFMS = $18       ;24 DISK FILE MANAGER POINTER
    DSKUTL = $1A       ;26 DISK UTILITY POINTER (DUP.SYS)
    ABUFPT = $1C       ;28 (XL) RESERVED
    ;        $1D       ;29 (XL) RESERVED
    ;        $1E       ;30 (XL) RESERVED
    ;        $1F       ;31 (XL) RESERVED
    ZIOCB  = $20       ;32 ZERO PAGE IOCB
    ICHIDZ = $20       ;32 HANDLER INDEX NUMBER (ID)
    ICDNOZ = $21       ;33 DEVICE NUMBER
    ICCOMZ = $22       ;34 COMMAND
    ICSTAZ = $23       ;35 STATUS
    ICBALZ = $24       ;36 BUFFER POINTER LOW BYTE
    ICBAHZ = $25       ;37 BUFFER POINTER HIGH BYTE
    ICPTLZ = $26       ;38 PUT ROUTINE POINTER LOW
    ICPTHZ = $27       ;39 PUT ROUTINE POINTER HIGH
    ICBLLZ = $28       ;40 BUFFER LENGTH LOW
    ICBLHZ = $29       ;41
    ICAX1Z = $2A       ;42 AUXILIARY INFORMATION BYTE 1
    ICAX2Z = $2B       ;43
    ICSPRZ = $2C       ;44 TWO SPARE BYTES (CIO USE)
    ICIDNO = $2E       ;46 IOCB NUMBER X 16
    CIOCHR = $2F       ;47 CHARACTER BYTE FOR CURRENT OPERATION
    ;
    STATUS = $30       ;48 STATUS STORAGE
    CHKSUM = $31       ;49 SUM WITH CARRY ADDED BACK
    BUFRLO = $32       ;50 DATA BUFFER LOW BYTE
    BUFRHI = $33       ;51
    BFENLO = $34       ;52 ADDRESS OF LAST BUFFER BYTE +1 (LOW)
    BFENHI = $35       ;53
    LTEMP  = $36       ;54 (XL) LOADER TEMPORARY STORAGE, 2 BYTES
    BUFRFL = $38       ;56 BUFFER FULL FLAG
    RECVDN = $39       ;57 RECEIVE DONE FLAG
    XMTDON = $3A       ;58 TRANSMISSION DONE FLAG
    CHKSNT = $3B       ;59 CHECKSUM-SENT FLAG
    NOCKSM = $3C       ;60 CHECKSUM-DOES-NOT-FOLLOW-DATA FLAG
    BPTR   = $3D       ;61
    FTYPE  = $3E       ;62
    FEOF   = $3F       ;63
    FREQ   = $40       ;64
    ;
    SOUNDR = $41       ;65 0=QUIET I/O
    CRITIC = $42       ;66 CRITICAL FUNCTION FLAG, NO DEFFERED VBI
    FMSZPG = $43       ;67 DOS ZERO PAGE, 7 BYTES
    ZCHAIN = $4A       ;74 (XL) HANDLER LOADER TEMP, 2 BYTES
    DSTAT  = $4C       ;76 DISPLAY STATUS
    ;
    ATRACT = $4D       ;77
    DRKMSK = $4E       ;78 ATTRACT MASK
    COLRSH = $4F       ;79 ATTRACT COLOR SHIFTER (EORed WITH GRAPHICS)
    ;
    TMPCHR = $50       ;80
    HOLD1  = $51       ;81
    LMARGN = $52       ;82 SCREEN LEFT MARGIN REGISTER
    RMARGN = $53       ;83 SCREEN RIGHT MARGIN
    ROWCRS = $54       ;84 CURSOR ROW
    COLCRS = $55       ;85 CURSOR COLUMN, 2 BYTES
    DINDEX = $57       ;87 DISPLAY MODE
    SAVMSC = $58       ;88 SCREEN ADDRESS
    OLDROW = $5A       ;90 CURSOR BEFORE DRAW OR FILL
    OLDCOL = $5B       ;91
    OLDCHR = $5D       ;93 DATA UNDER CURSOR
    OLDADR = $5E       ;94 CURSOR ADDRESS
    FKDEF  = $60       ;96 (XL) FUNCTION KEY DEFINATION POINTER
    PALNTS = $62       ;98 (XL) EUROPE/NORTH AMERICA TV FLAG
    LOGCOL = $63       ;99 LOGICAL LINE COLUMN POINTER
    MLTTMP = $66      ;102
    OPNTMP = $66      ;102 TEMPORARY STORAGE FOR CHANNEL OPEN
    SAVADR = $68      ;104
    RAMTOP = $6A      ;106 START OF ROM (END OF RAM + 1), HIGH BYTE ONLY
    BUFCNT = $6B      ;107 BUFFER COUNT
    BUFSTR = $6C      ;108 POINTER USED BY EDITOR
    BITMSK = $6E      ;110 POINTER USED BY EDITOR
    SHFAMT = $6F      ;111
    ROWAC  = $70      ;112
    COLAC  = $72      ;114
    ENDPT  = $74      ;116
    DELTAR = $76      ;118
    DELTAC = $77      ;119
    KEYDEF = $79      ;121 (XL) KEY DEFINATION POINTER, 2 BYTES
    SWPFLG = $7B      ;123 NON 0 IF TEXT AND REGULAR RAM IS SWAPPED
    HOLDCH = $7C      ;124 CH MOVED HERE BEFORE CTRL AND SHIFT
    INSDAT = $7D      ;125
    COUNTR = $7E      ;126
    ;
    ;          PAGE 2
    ;
    INTABS = $0200    ;512 INTERRUPT RAM
    VDSLST = $0200    ;512 NMI VECTOR
    VPRCED = $0202    ;514 PROCEED LINE IRQ VECTOR
    VINTER = $0204    ;516 INTERRUPT LINE IRQ VECTOR
    VBREAK = $0206    ;518
    VKEYBD = $0208    ;520
    VSERIN = $020A    ;522 SERIAL INPUT READY IRQ
    VSEROR = $020C    ;524 SERIAL OUTPUT READY IRQ
    VSEROC = $020E    ;526 SERIAL OUTPUT COMPLETE IRQ
    VTIMR1 = $0210    ;528 TIMER 1 IRQ
    VTIMR2 = $0212    ;530 TIMER 2 IRQ
    VTIMR4 = $0214    ;532 TIMER 4 IRQ
    VIMIRQ = $0216    ;534 IRQ VECTOR
    CDTMV1 = $0218    ;536 DOWN TIMER 1
    CDTMV2 = $021A    ;538 DOWN TIMER 2
    CDTMV3 = $021C    ;540 DOWN TIMER 3
    CDTMV4 = $021E    ;542 DOWN TIMER 4
    CDTMV5 = $0220    ;544 DOWN TIMER 5
    VVBLKI = $0222    ;546
    VVBLKD = $0224    ;548
    CDTMA1 = $0226    ;550 DOWN TIMER 1 JSR ADDRESS
    CDTMA2 = $0228    ;552 DOWN TIMER 2 JSR ADDRESS
    CDTMF3 = $022A    ;554 DOWN TIMER 3 FLAG
    SRTIMR = $022B    ;555 REPEAT TIMER
    CDTMF4 = $022C    ;556 DOWN TIMER 4 FLAG
    INTEMP = $022D    ;557 IAN'S TEMP
    CDTMF5 = $022E    ;558 DOWN TIMER FLAG 5
    SDMCTL = $022F    ;559 DMACTL SHADOW
    SDLSTL = $0230    ;560 DISPLAY LIST POINTER
    SSKCTL = $0232    ;562 SKCTL SHADOW
    LCOUNT = $0233    ;563 (XL) LOADER TEMP
    LPENH  = $0234    ;564 LIGHT PEN HORIZONTAL
    LPENV  = $0235    ;565 LIGHT PEN VERTICAL
    ;        $0236    ;566 2 SPARE BYTES
    RELADR = $0238    ;568 (XL) LOADER
    CDEVIC = $023A    ;570 DEVICE COMMAND FRAME BUFFER
    CAUX1  = $023C    ;572 DEVICE COMMAND AUX 1
    CAUX2  = $023D    ;573 DEVICE COMMAND AUX 2
    TEMP   = $023E    ;574 TEMPORARY STORAGE
    ERRFLG = $023F    ;575 DEVICE ERROR FLAG (EXCEPT TIMEOUT)
    DFLAGS = $0240    ;576 FLAGS FROM DISK SECTOR 1
    DBSECT = $0241    ;577 NUMBER OF BOOT DISK SECTORS
    BOOTAD = $0242    ;578 BOOT LOAD ADDRESS POINTER
    COLDST = $0244    ;580 COLD START FLAG, 1 = COLD START IN PROGRESS
    RECLEN = $0245    ;581 (XL) LOADER
    ;        $0246    ;582 (XL) RESERVED, 39 BYTES
    DEVMASK = $0247   ; (XL) Device mask for known PBI devices
    NDEVREQ = $0248   ; (XL) Currently selected PBI device
    CHSALT = $026B    ;619 (XL) CHARACTER SET POINTER
    VSFLAG = $026C    ;620 (XL) FINE SCROLL TEMPORARY
    KEYDIS = $026D    ;621 (XL) KEYBOARD DISABLE
    FINE   = $026E    ;622 (XL) FINE SCROLL FLAG
    GPRIOR = $026F    ;623 P/M PRIORITY AND GTIA MODES
    GTIA   = $026F    ;623
    PADDL0 = $0270    ;624 (XL) 3 MORE PADDLES
    STICK0 = $0278    ;632 (XL) 1 MORE STICK
    PTRIG0 = $027C    ;636 (XL) 3 MORE PADDLE TRIGGERS
    STRIG0 = $0284    ;644 (XL) 1 MORE STICK TRIGGER
    WMODE  = $0289    ;649
    BLIM   = $028A    ;650
    ;        $028B    ;651 5 SPARE BYTES
    NEWADR = $028E    ;654 (XL)  LOADER RAM
    TXTROW = $0290    ;656
    TXTCOL = $0291    ;657
    TINDEX = $0293    ;659 TEXT INDEX
    TXTMSC = $0294    ;660
    TXTOLD = $0296    ;662 OLD ROW AND OLD COL FOR TEXT, 2 BYTES
    ;        $0298    ;664 4 SPARE BYTES
    CRETRY = $029C    ;668 (XL)  NUMBER OF COMMAND FRAME RETRIES
    SUBTMP = $029E    ;670
    HOLD2  = $029F    ;671
    DMASK  = $02A0    ;672
    TMPLBT = $02A1    ;673
    ESCFLG = $02A2    ;674
    TABMAP = $02A3    ;675 15 BYTE BIT MAP FOR TAB SETTINGS
    LOGMAP = $02B2    ;690 4 BYTE LOGICAL LINE START BIT MAP
    INVFLG = $02B6    ;694
    FILFLG = $02B7    ;695 FILL DIRING DRAW FLAG
    TMPROW = $02B8    ;696
    TMPCOL = $02B9    ;697
    SCRFLG = $02BB    ;699 SCROLL FLAG
    HOLD4  = $02BC    ;700
    DRETRY = $02BD    ;701 (XL)  NUMBER OF DEVICE RETRIES
    SHFLOC = $02BE    ;702
    BOTSCR = $02BF    ;703 24 NORM, 4 SPLIT
    PCOLR0 = $02C0    ;704 3 MORE PLAYER COLOR REGISTERS
    COLOR0 = $02C4    ;708 4 MORE GRAPHICS COLOR REGISTERS
    RUNADR = $02C9    ;713 (XL) LOADER VECTOR
    HIUSED = $02CB    ;715 (XL) LOADER VECTOR
    ZHIUSE = $02CD    ;717 (XL) LOADER VECTOR
    GBYTEA = $02CF    ;719 (XL) LOADER VECTOR
    LOADAD = $02D1    ;721 (XL) LOADER VECTOR
    ZLOADA = $02D3    ;723 (XL) LOADER VECTOR
    DSCTLN = $02D5    ;725 (XL) DISK SECTOR SIZ
    ACMISR = $02D7    ;727 (XL) RESERVED
    KRPDER = $02D9    ;729 (XL) KEY AUTO REPEAT DELAY
    KEYREP = $02DA    ;730 (XL) KEY AUTO REPEAT RATE
    NOCLIK = $02DB    ;731 (XL) KEY CLICK DISABLE
    HELPFG = $02DC    ;732 (XL) HELP KEY FLAG
    DMASAV = $02DD    ;733 (XL) SDMCTL (DMA) SAVE
    PBPNT  = $02DE    ;734 (XL) PRINTER BUFFER POINTER
    PBUFSZ = $02DF    ;735 (XL) PRINTER BUFFER SIZE
    GLBABS = $02E0    ;736 GLOBAL VARIABLES, 4 SPARE BYTES
    RAMSIZ = $02E4    ;740 PERMANENT START OF ROM POINTER
    MEMTOP = $02E5    ;741 END OF FREE RAM
    MEMLO  = $02E7    ;743
    HNDLOD = $02E9    ;745 (XL) HANDLER LOADER FLAG
    DVSTAT = $02EA    ;746 DEVICE STATUS BUFFER, 4 BYTES
    CBAUDL = $02EE    ;750 CASSETTE BAUD RATE, 2 BYTES
    CRSINH = $02F0    ;752 1 = INHIBIT CURSOR
    KEYDEL = $02F1    ;753 KEY DELAY AND RATE
    CH1    = $02F2    ;754
    CHACT  = $02F3    ;755
    CHBAS  = $02F4    ;756 CHARACTER SET POINTER
    NEWROW = $02F5    ;757 (XL) DRAW DESTINATION
    NEWCOL = $02F6    ;758 (XL) DRAW DESTINATION
    ROWINC = $02F8    ;760 (XL)
    COLINC = $02F9    ;761 (XL)
    CHAR   = $02FA    ;762
    ATACHR = $02FB    ;763 ATASCII CHARACTER FOR CIO
    CH     = $02FC    ;764
    FILDAT = $02FC    ;764 COLOR FOR SCREEN FILL
    DSPFLG = $02FE    ;766 DISPLAY CONTROL CHARACTERS FLAG
    SSFLAG = $02FF    ;767 DISPLAY START/STOP FLAFG
    ;
    ;
    ;           PAGE 3
    ;
    ;
    ;     RESIDENT DISK HANDLER/SIO INTERFACE
    ;
    DCB    = $0300    ;768 DEVICE CONTROL BLOCK
    DDEVIC = $0300    ;768
    DUNIT  = $0301    ;769
    DCOMND = $0302    ;770
    DSTATS = $0303    ;771
    DBUFLO = $0304    ;772
    DBUFHI = $0305    ;773
    DTIMLO = $0306    ;774
    DUNUSE = $0307    ;775
    DAUXH  = $0307    ;775 DAUX3 (KMK)
    DBYTLO = $0308    ;776
    DBYTHI = $0309    ;777
    DAUX1  = $030A    ;778
    DAUX2  = $030B    ;779
    TIMER1 = $030C    ;780 INITIAL TIMER VALUE
    DAUX3  = $030C    ;780 DAUX3 (drac030)
    DAUX4  = $030D    ;781 DAUX4
    JMPERS = $030E    ;782 (XL) OPTION JUMPERS
    CASFLG = $030F    ;783 CASSETTE MODE WHEN SET
    TIMER2 = $0310    ;784 FINAL VALUE, TIMERS 1 & 2 DETERMINE BAUD RATE
    TEMP1  = $0312    ;786
    TEMP2  = $0313    ;787 (XL)
    PTIMOT = $0314    ;788 (XL) PRINTER TIME OUT
    TEMP3  = $0315    ;789
    SAVIO  = $0316    ;790 SAVE SERIAL IN DATA PORT
    TIMFLG = $0317    ;791 TIME OUT FLAG FOR BAUD RATE CORRECTION
    STACKP = $0318    ;792 SIO STACK POINTER SAVE
    TSTAT  = $0319    ;793 TEMPORARY STATUS HOLDER
    HATABS = $031A    ;794 HANDLER ADDRESS TABLE, 38 BYTES
    MAXDEV = $0321    ;801 MAXIMUM HANDLER ADDRESS INDEX
    PUPBT1 = $033D    ;829 (XL) POWER-UP/RESET
    PUPBT2 = $033E    ;830 (XL) POWER-UP/RESET
    PUPBT3 = $033F    ;831 (XL) POWER-UP/RESET
    ;
    ;IOCB's
    ;
    IOCB   = $0340    ;832
    ICHID  = $0340    ;832
    ICDNO  = $0341    ;833
    ICCOM  = $0342    ;834
    ICSTA  = $0343    ;835
    ICBAL  = $0344    ;836
    ICBAH  = $0345    ;837
    ICPTL  = $0346    ;838
    ICPTH  = $0347    ;839
    ICBLL  = $0348    ;840
    ICBLH  = $0349    ;841
    ICAX1  = $034A    ;842
    ICAX2  = $034B    ;843
    ICAX3  = $034C    ;844
    ICAX4  = $034D    ;845
    ICAX5  = $034E    ;846
    ICAX6  = $034F    ;847
    ;                     OTHER IOCB's, 112 BYTES
    PRNBUF = $03C0    ;960 PRINTER BUFFER, 40 BYTES
    SUPERF = $03E8   ;1000 (XL) SCREEN EDITOR
    CKEY   = $03E9   ;1001 (XL) START KEY FLAG
    CASSBT = $03EA   ;1002 (XL) CASSETTE BOOT FLAG
    CARTCK = $03EB   ;1003 (XL) CARTRIDGE CHECKSUM
    ACMVAR = $03ED   ;1005 (XL) RESERVED, 6 BYTES
    MINTLK = $03F9   ;1017 (XL) RESERVED
    GINTLK = $03FA   ;1018 (XL) CARTRIDGE INTERLOCK
    CHLINK = $03FB   ;1019 (XL) HANDLER CHAIN, 2 BYTES
    CASBUF = $03FD   ;1021 CASSETTE BUFFER, 131 BYTES TO $047F
    ;
    ;
    ;            PAGE 4
    ;
    ;
    USAREA = $0480   ;1152 128 SPARE BYTES
    ;
    ;  SEE APPENDIX C FOR PAGES 4 AND 5 USAGE
    ;
    ;
    ;
    ;
    ;          PAGE 5
    ;
    PAGE5  = $0500   ;1280 127 FREE BYTES
    ;        $057E   ;1406 129 FREE BYTES IF FLOATING POINT ROUTINES NOT USED
    ;
    ;FLOATING POINT NON-ZERO PAGE RAM, NEEDED ONLY IF FP IS USED
    ;
    LBPR1  = $057E   ;1406 LBUFF PREFIX 1
    LBPR2  = $05FE   ;1534 LBUFF PREFIX 2
    LBUFF  = $0580   ;1408 LINE BUFFER
    PLYARG = $05E0   ;1504 POLYNOMIAL ARGUMENTS
    FPSCR  = $05E6   ;1510 PLYARG+FPREC
    FPSCR1 = $05EC   ;1516 FPSCR+FPREC
    FSCR   = $05E6   ;1510 =FPSCR
    FSCR1  = $05EC   ;1516 =FPSCR1
    LBFEND = $05FF   ;1535 END OF LBUFF
    ;
    ;
    ;           PAGE 6
    ;
    ;
    PAGE6  = $0600   ;1536 256 FREE BYTES
    ;
    ;
    ;           PAGE 7
    ;
    ;
    BOOTRG = $0700   ;1792 PROGRAM AREA
    ;
    ;
    ;       UPPER ADDRESSES
    ;
    ;
    RITCAR = $8000  ;32768 RAM IF NO CARTRIDGE
    LFTCAR = $A000  ;40960 RAM IF NO CARTRIDGE
    ;
    ;
    ;      HARDWARE REGISTERS
    ;
    ;
    ;  SEE REGISTER LIST FOR MORE INFORMATION
    ;
    ;
    HPOSP0 = $D000  ;53248
    M0PF   = $D000  ;53248
    SIZEP0 = $D008  ;53256
    M0PL   = $D008  ;53256
    SIZEM  = $D00C  ;53260
    GRAFP0 = $D00D  ;53261
    GRAFM  = $D011  ;53265
    COLPM0 = $D012  ;53266
    COLPF0 = $D016  ;53270
    PRIOR  = $D01B  ;53275
    GTIAR  = $D01B  ;53275
    VDELAY = $D01C  ;53276
    GRACTL = $D01D  ;53277
    HITCLR = $D01E  ;53278
    CONSOL = $D01F  ;53279

    AUDF1  = $D200  ;53760
    AUDC1  = $D201  ;53761
    AUDCTL = $D208  ;53768
    RANDOM = $D20A  ;53770
    IRQEN  = $D20E  ;53774
    SKCTL  = $D20F  ;53775

    PORTA  = $D300  ;54016
    PORTB  = $D301  ;54017
    PACTL  = $D302  ;54018
    PBCTL  = $D303  ;54019

    DMACLT = $D400  ;54272
    DLISTL = $D402  ;54274
    HSCROL = $D404  ;54276
    VSCROL = $D405  ;54277
    CHBASE = $D409  ;54281
    WSYNC  = $D40A  ;54282
    VCOUNT = $D40B  ;54283
    NMIEN  = $D40E  ;54286

    ;
    ;       OPERATING SYSTEM
    ;
    ;  VECTOR TABLE, CONTAINS ADDRESSES OF CIO ROUTINES IN THE
    ;  FOLLOWING ORDER. THE ADDRESSES IN THE TABLE ARE TRUE ADDRESSES-1
    ;
    ;  ADDRESS + 0  OPEN
    ;          + 2  CLOSE
    ;          + 4  GET
    ;          + 6  PUT
    ;          + 8  STATUS
    ;          + A  SPECIAL
    ;          + C  JMP TO INITIALIZATION
    ;          + F  NOT USED
    EDITRV = $E400  ;58368 EDITOR
    SCRENV = $E410  ;58384 SCREEN
    KEYBDV = $E420  ;58400 KEYBOARD
    PRINTV = $E430  ;58416 PRINTER
    CASETV = $E440  ;58432 CASSETTE
    ;
    ;        ROM VECTORS
    ;
    DSKINV = $E453  ;58451
    CIOV   = $E456  ;58454
    SIOV   = $E459  ;58457
    SETVBV = $E45C
    SYSVBV = $E45F  ;58463
    VBIVAL = $E460  ;58464 ADR AT VVBLKI
    XITVBV = $E462  ;58466 EXIT VBI
    VBIXVL = $E463  ;58467 ADR AT VVBLKD
    BLKBDV = $E471  ;58481 MEMO PAD MODE
    WARMSV = $E474  ;58484
    COLDSV = $E477  ;58487

    NEWDEV = $E486  ; Add a HATABS device ("PHENTV" in OS list)
    GENDEV = $E48F  ; Generic PBI HATABS device entry point ("GPDVV" in OS list)

.endscope ; SYS
